开发中使用spring的主要技术
1 ioc容器管理各层组建
2 使用aop配置声明式事务
3 整合其他框架

aop和ioc概念
aop：aspect oriented program, 面向切面编程;Filter（过滤器）也是一种aop，aop是一种新的方法论，是对传统oop的补充，aop的主要编程对象是切面（aspect）而切面模块化横切关注点
ioc：invert of control 控制反转，也称为di（依赖注入），其思想是反转资源获取的方向。传统的资源查找方式要求组件向容器发起请求查找资源，作为回应，容器适时的返回资源。而应用ioc之后，则是容器主动的将资源推送给他所管理的组件，组件所要做的仅是选择一种合适的方式来接受资源，这种行为也被称为查找的被动形式

在spring中配置bean的方式
bean的配置方式：通过全类名（反射），通过工厂方法（静态工厂方法&实例工厂方法），FactoryBean

IOC容器对Bean的生命周期：
1 通过构造器或工厂方法创建bean实例
2 为bean的属性设置直和对其他bean的引用
3 将bean实例传递给bean后置处理器的postProcessBeforeInitialization方法
4 调用bean的初始化方法（init-method）
5 将bean实例传递给Bean后置处理器的postProcessAfterInitialization方法
6 bean可以使用了
8 当容器关闭时，调用bean的销毁方法（destroy-method）

Spring整合Struts2
整合Struts2，即由ioc容器管理struts2的Action：
1 安装spring插件：把struts2-spring-plugin-2.2.1.jar复制到当前web应用的 WEB-INF/lib目录下
2 在Spring的配置文件中配置struts2的action实例
3 在struts配置文件中配置action，但其class属性不再指向该action的实现类，而是指向spring容器中实例的id

spring整合hibenate
整合hibernate，及由ioc容器生成sessionFactory对象，并使用Spring的声明式事务
1 利用LocalSessionFactoryBean工厂Bean，声明一个使用xml映射文件的SessionFactory实例
2 利用HibernateTransactionManager配置Hibenate的事务管理器

Spring MVC 比较 Struts2
1 Spring MVC的入口是Servlet，而Stuts2是Filter
2 Spring MVC会稍微比Struts2快些，Spring MVC是给予方法设计的，而Struts2是基于类，每次发一次请求都会实例一个Action
3 Spring MVC使用更加简洁， 开发效率Spring MVC确实比Sturt2高：支持JSR303,处理Ajax的请求更方便
4 Stuts2的OGNL表达式使页面开发效率相比Spring MVC要高写

Spring MVC的运行流程
1 在整个Spring MVC 框架中，DispatcherServlet处于核心位置，负责协调和组织不同组件以完成请求处理并返回响应的工作
2 SpringMVC处理请求的过程：
    1）若一个请求匹配DispatcherServlet的请求映射路径（在web.xml中指定），web容器将该请求转交给DspatcherServlet处理
    2）DispatcherServlet接受到请求后，将根据请求信息（包括URL，HTTP方法，请求头，请求参数，Cookie等）及HandlerMapping的配置找到处理请求的处理器（Handler），可将HandlerMapping看成路由控制器，将Handler看成目标主机
    3）当DispatcherServlet根据HandlerMapping得到对应当前请求的Handler后，通过HandlerAdapter对Handler进行封装，再以统一的适配器接口调用Handler。
    4）处理器完成业务逻辑的处理后将返回一个ModelAndView给DispatcherServlet，ModelAndView包括了视图逻辑名和模型数据信息。
    5）DispatcherServlet借助ViewResoler完成逻辑视图名到真实视图对象的解析
    6）得到真实视图对象View后，DispatcherServlet使用这个View对ModelAndView中的模型数据进行视图渲染

Spring MVC常用的五个注解
@RequestMapping @PathVariable @RequestParam @RequestBody @RequestBoy 

使用SpringMVC完成JSON操作
1 配置MappingJacksonHttpMessageConverter
2 使用@RequestBody注解或ResponseEntity作为返回值

